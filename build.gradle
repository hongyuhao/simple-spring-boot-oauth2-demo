buildscript {
	ext {
		springBootVersion = '1.5.6.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

configurations {
	mybatisGenerator
}

repositories {
	mavenCentral()
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

version = '0.0.1-SNAPSHOT'

dependencies {
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.security.oauth:spring-security-oauth2')
	compile('org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.0')
	compile('com.alibaba:druid:1.0.1')
	compile('com.alibaba:fastjson:1.2.24')

	runtime('mysql:mysql-connector-java:6.0.6')
	
	testCompile('junit:junit:4.12')
	testCompile('org.springframework.boot:spring-boot-starter-test')

	mybatisGenerator('org.mybatis.generator:mybatis-generator-core:1.3.2')
	mybatisGenerator('mysql:mysql-connector-java:5.1.36')
	mybatisGenerator('tk.mybatis:mapper:3.3.2')
}

// 定义mybatis代码生成任务插件
task mybatisGenerate << {
	ant.taskdef(
			name: 'mbgenerator',
			classname: 'org.mybatis.generator.ant.GeneratorAntTask',
			classpath: configurations.mybatisGenerator.asPath
	)
	ant.mbgenerator(overwrite: true,
			configfile: '/Users/yuhaohong/work/git/simple-spring-boot-security-demo/src/main/resources/generatorConfig.xml', verbose: true) {
	}
}
